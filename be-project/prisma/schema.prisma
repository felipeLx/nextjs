generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? 
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products         OrderedProduct[]
  feedback         ProductReview[]
  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique
  userId             Int       
  providerType       String    
  providerId         String    
  providerAccountId  String    
  refreshToken       String?   
  accessToken        String?   
  accessTokenExpires DateTime? 
  createdAt          DateTime  @default(now()) 
  updatedAt          DateTime  @default(now())

  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  @@map(name: "sessions")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  @@map(name: "verification_requests")
}



model Product {
  id               Int       @id @default(autoincrement())
  name             String    @unique
  price            Float
  image           String?
  brand           String?
  description     String?
  category        String?
  
  // Relation fields
  user OrderedProduct[]
  feedback ProductReview[]
}

model ProductReview {
  id                Int       @id @default(autoincrement())
  feedback          String

  // Relation fields
  user    User?  @relation(fields: [userId], references: [id])
  userId  Int @unique
  
  product  Product? @relation(fields: [productId], references: [id])
  productId  Int
}

model OrderedProduct {
  createdAt DateTime @default(now())
  role UserRole

  // Relation fields
  user          User @relation(fields:[userId], references: [id])
  userId        Int
  
  product       Product @relation(fields: [productId], references: [id])
  productId      Int

  @@id([userId, productId])
  @@index([userId, role])
}

enum UserRole {
  TEST
  USER
}

enum TokenType {
  EMAIL // used as a short lived token sent to the user's email
  API
}